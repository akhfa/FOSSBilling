name: SonarCloud Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: curl, intl, mbstring, pdo, zlib
          coverage: xdebug

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: src/vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --working-dir=src

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Prepare test environment
        run: |
          cp ./src/config-sample.php ./src/config.php
          mkdir -p ./src/data/{cache,log}
        env:
          APP_ENV: test

      - name: Run PHPUnit tests with coverage
        run: |
          cd src
          ./vendor/bin/phpunit --configuration ../phpunit.xml --coverage-clover ../coverage.xml --log-junit ../phpunit.xml
        env:
          APP_ENV: test

      - name: Run PHPStan analysis
        run: |
          cd src
          ./vendor/bin/phpstan analyse --error-format=checkstyle --no-progress > ../phpstan-report.xml || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=FOSSBilling_FOSSBilling
            -Dsonar.organization=fossbilling
            -Dsonar.projectName=FOSSBilling
            -Dsonar.sources=src
            -Dsonar.tests=tests,tests-legacy
            -Dsonar.exclusions=src/vendor/**,src/themes/**/node_modules/**,src/themes/**/dist/**,src/themes/**/build/**,**/*.min.js,**/*.min.css,src/data/**,src/install/**,src/ckeditor/**
            -Dsonar.test.exclusions=src/vendor/**
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.php.phpstan.reportPaths=phpstan-report.xml
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.cpd.php.minimumtokens=70
            -Dsonar.qualitygate.wait=true

  sonarcloud-pr-gate:
    name: SonarCloud PR Quality Gate
    runs-on: ubuntu-latest
    needs: sonarcloud
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      checks: write
    steps:
      - name: Wait for SonarCloud Quality Gate
        uses: sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt

      - name: Comment PR with Quality Gate status
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('SonarCloud Quality Gate')
            );

            const sonarUrl = `https://sonarcloud.io/summary/new_code?id=FOSSBilling_FOSSBilling&pullRequest=${context.issue.number}`;
            const body = `## SonarCloud Quality Gate

            üìä View detailed analysis on [SonarCloud](${sonarUrl})

            The quality gate check ${{ job.status === 'success' ? '‚úÖ **PASSED**' : '‚ùå **FAILED**' }}

            Please review any issues found before merging.`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }